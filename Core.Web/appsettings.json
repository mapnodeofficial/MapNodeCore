{
  "ConnectionStrings": {
    "DefaultConnection": "Server=*****;Database=MapNode;User Id=*****;password=*****;Trusted_Connection=False;MultipleActiveResultSets=true"
  },
  "ProductPageSize": 9,
  "BlogPageSize": 30,
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft": "Warning",
      "Microsoft.Hosting.Lifetime": "Information"
    }
  },
  "GooglePlaceApi": "AIzaSyAqpMe***************",
  "DistanceLimit": "**********",
  "TokenConfig": {
    "TokenPrice": "**********",
    "SaleF1Rate": "**********",
    "SaleF2Rate": "**********",
    "SaleF3Rate": "**********",
    "SavingReferralDirect": "**********",
    "SavingProfitOnReferral1": "**********",
    "SavingProfitOnReferral2": "**********",
    "SavingProfitOnReferral3": "**********",
    "SavingProfitOnReferral4": "**********",
    "SavingProfitOnReferral5": "**********",
    "IntervalHashRate": "**********"
  },
  "Recaptcha": {
    "SiteKey": "6LeKLv8gAAAAAOzRK89OiN*****",
    "SecretKey": "6LeKLv8gAAAAADb2mNMJ*****"
  },
  "Authentication": {
    "Facebook": {
      "AppId": "26962831*****3",
      "AppSecret": "afd9c435c68caf0*****"
    },
    "Google": {
      "ClientId": "63985873838-qd1s37miaa21jr**********sercontent.com",
      "ClientSecret": "Sq1zUS7Lc8*****"
    }
  },
  "BlockChain": {
    "CoinmarKetCapApi": {
      "CMC_PRO_API_KEY": "3816b1e1-3dce**********84b57799",
      "CMC_PRO_API_URL": {
        "CryptoCurrency": {
          "Listings_Latest": "https://pro-api.coinmarketcap.com/v1/cryptocurrency/listings/latest",
          "OHLCV_Latest": "https://pro-api.coinmarketcap.com/v2/cryptocurrency/quotes/latest"
        }
      }
    }
  },
  "MailSettings": {
    "Server": "smtp.gmail.com",
    "UserName": "**********",
    "Password": "**********",
    "FromEmail": "support@mapnode.io",
    "FromName": "MapNode Team",
    "Port": "587",
    "EnableSsl": "true",
    "AdminMail": "support@mapnode.io"
  },
  "Serilog": {
    "Using": [ "Serilog.Sinks.File" ],
    "MinimumLevel": {
      "Default": "Information",
      "Override": {
        "Default": "Information"
      }
    },
    "WriteTo": [
      {
        "Name": "Console",
        "Args": {
          "theme": "Serilog.Sinks.SystemConsole.Themes.AnsiConsoleTheme::Code, Serilog.Sinks.Console",
          "outputTemplate": "[{Timestamp:HH:mm:ss} {Level:u3}] {Message:lj} <s:{SourceContext}>{NewLine}{Exception}"
        }
      },
      {
        "Name": "Logger",
        "Args": {
          "configureLogger": {
            "Filter": [
              {
                "Name": "ByIncludingOnly",
                "Args": {
                  "expression": "(@l = 'Information')"
                }
              }
            ],
            "WriteTo": [
              {
                "Name": "File",
                "Args": {
                  "path": "%BASEDIR%\\logs\\info-.txt",
                  "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{Level}] [{SourceContext}] [{EventId}] {Message}{NewLine}{Exception}",
                  "rollingInterval": "Day",
                  "retainedFileCountLimit": 30
                }
              }
            ]
          }
        }
      },
      {
        "Name": "Logger",
        "Args": {
          "configureLogger": {
            "Filter": [
              {
                "Name": "ByIncludingOnly",
                "Args": {
                  "expression": "(@l = 'Error' or @l = 'Warning')"
                }
              }
            ],
            "WriteTo": [
              {
                "Name": "File",
                "Args": {
                  "path": "%BASEDIR%\\logs\\error-.txt",
                  "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{Level}] [{SourceContext}] [{EventId}] {Message}{NewLine}{Exception}",
                  "rollingInterval": "Day",
                  "retainedFileCountLimit": 30
                }
              }
            ]
          }
        }
      }
    ],
    "Enrich": [ "FromLogContext", "WithMachineName", "WithThreadId" ]
  }
}
